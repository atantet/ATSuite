#ifndef TRANSFEROPERATORSPECTRUM_HPP
#define TRANSFEROPERATORSPECTRUM_HPP

#include <string>
#include "arlnsmat.h"
#include "arlsnsym.h"

// Declarations
void getEigenValNonSym(ARluNonSymMatrix<double, double> *, double *, double *,
		       int, std::string&, double, int, int, bool, double *){

// Definitions
void getEigenValNonSym(ARluNonSymMatrix<double, double> *P,
		       double *EigValReal, double *EigValImag,
		       int nev, std::string& which="LM", double tol=0., int maxit=0,
		       int ncv=0, bool AutoShift=true, double *resid=NULL){
  ARluNonSymStdEig<double> EigProb;

  // Define eigenvalue problem
  EigProb = ARluNonSymStdEig<double>(nev, &P, which, ncv, tol, maxit, resid,
				     AutoShift);

  // Get eigenvalues
  EigProb.Eigenvalues(EigValReal, EigValImag);

  return;
}


#endif
